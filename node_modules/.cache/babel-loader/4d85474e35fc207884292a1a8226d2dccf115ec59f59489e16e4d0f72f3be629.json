{"ast":null,"code":"import _slicedToArray from\"/Users/oshiroryo/React-weather-app2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from\"react\";import axios from\"axios\";import Title from\"./components/Title\";import Form from\"./components/Form\";import Results from\"./components/Results\";import Loading from\"./components/Loading\";import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),city=_useState4[0],setCity=_useState4[1];var _useState5=useState({country:\"\",cityName:\"\",temperature:\"\",conditionText:\"\",icon:\"\"}),_useState6=_slicedToArray(_useState5,2),results=_useState6[0],setResults=_useState6[1];var getWeather=function getWeather(e){console.log(\"hoge\");e.preventDefault();setLoading(true);axios.get(\"http://api.weatherapi.com/v1/current.json?key=e1e6ca0ad2e24b5983982736230807&q=\".concat(city,\"&aqi=no\")).then(function(res){setResults({country:res.data.location.country,cityName:res.data.location.name,temperature:res.data.current.temp_c,conditionText:res.data.current.condition.text,icon:res.data.current.condition.icon});setCity(\"\");setLoading(false);}).catch(function(err){return alert(\"エラーが発生しました。ページをリロードして、もう一度トライしてください。\");});};return/*#__PURE__*/_jsx(\"div\",{className:\"wrapper\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Title,{}),/*#__PURE__*/_jsx(Form,{getWeather:getWeather,setCity:setCity,city:city}),loading?/*#__PURE__*/_jsx(Loading,{}):/*#__PURE__*/_jsx(Results,{results:results})]})});};export default App;","map":{"version":3,"names":["useState","axios","Title","Form","Results","Loading","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","city","setCity","_useState5","country","cityName","temperature","conditionText","icon","_useState6","results","setResults","getWeather","e","console","log","preventDefault","get","concat","then","res","data","location","name","current","temp_c","condition","text","catch","err","alert","className","children"],"sources":["/Users/oshiroryo/React-weather-app2/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport Title from \"./components/Title\";\nimport Form from \"./components/Form\";\nimport Results from \"./components/Results\";\nimport Loading from \"./components/Loading\";\nimport './App.css';\n\nfunction App() {\n    const [loading, setLoading] = useState(false);\n    const [city, setCity] = useState(\"\");\n    const [results, setResults] = useState({\n        country: \"\",\n        cityName: \"\",\n        temperature: \"\", \n        conditionText: \"\",\n        icon: \"\"\n    });\n    const getWeather = (e) => {\n        console.log(\"hoge\");\n        e.preventDefault();\n        setLoading(true);\n        axios.get(`http://api.weatherapi.com/v1/current.json?key=e1e6ca0ad2e24b5983982736230807&q=${city}&aqi=no`)\n             .then(res => {\n                setResults({\n                    country: res.data.location.country,\n                    cityName: res.data.location.name,\n                    temperature: res.data.current.temp_c,\n                    conditionText: res.data.current.condition.text,\n                    icon: res.data.current.condition.icon\n                })\n                setCity(\"\");\n                setLoading(false);\n             })\n             .catch(err => alert(\"エラーが発生しました。ページをリロードして、もう一度トライしてください。\"));\n    }\n    return (\n        <div className=\"wrapper\">\n            <div className=\"container\">\n                <Title />\n                <Form getWeather={getWeather} setCity={setCity} city={city} />\n                {loading ? <Loading /> : <Results results={results} />}   \n            </div>\n        </div>\n    );\n};\nexport default App;"],"mappings":"yHAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,IAAI,KAAM,mBAAmB,CACpC,MAAO,CAAAC,OAAO,KAAM,sBAAsB,CAC1C,MAAO,CAAAC,OAAO,KAAM,sBAAsB,CAC1C,MAAO,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEnB,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACX,IAAAC,SAAA,CAA8BX,QAAQ,CAAC,KAAK,CAAC,CAAAY,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAtCG,OAAO,CAAAF,UAAA,IAAEG,UAAU,CAAAH,UAAA,IAC1B,IAAAI,UAAA,CAAwBhB,QAAQ,CAAC,EAAE,CAAC,CAAAiB,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAA7BE,IAAI,CAAAD,UAAA,IAAEE,OAAO,CAAAF,UAAA,IACpB,IAAAG,UAAA,CAA8BpB,QAAQ,CAAC,CACnCqB,OAAO,CAAE,EAAE,CACXC,QAAQ,CAAE,EAAE,CACZC,WAAW,CAAE,EAAE,CACfC,aAAa,CAAE,EAAE,CACjBC,IAAI,CAAE,EACV,CAAC,CAAC,CAAAC,UAAA,CAAAb,cAAA,CAAAO,UAAA,IANKO,OAAO,CAAAD,UAAA,IAAEE,UAAU,CAAAF,UAAA,IAO1B,GAAM,CAAAG,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAIC,CAAC,CAAK,CACtBC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC,CACnBF,CAAC,CAACG,cAAc,CAAC,CAAC,CAClBlB,UAAU,CAAC,IAAI,CAAC,CAChBd,KAAK,CAACiC,GAAG,mFAAAC,MAAA,CAAmFjB,IAAI,WAAS,CAAC,CACpGkB,IAAI,CAAC,SAAAC,GAAG,CAAI,CACVT,UAAU,CAAC,CACPP,OAAO,CAAEgB,GAAG,CAACC,IAAI,CAACC,QAAQ,CAAClB,OAAO,CAClCC,QAAQ,CAAEe,GAAG,CAACC,IAAI,CAACC,QAAQ,CAACC,IAAI,CAChCjB,WAAW,CAAEc,GAAG,CAACC,IAAI,CAACG,OAAO,CAACC,MAAM,CACpClB,aAAa,CAAEa,GAAG,CAACC,IAAI,CAACG,OAAO,CAACE,SAAS,CAACC,IAAI,CAC9CnB,IAAI,CAAEY,GAAG,CAACC,IAAI,CAACG,OAAO,CAACE,SAAS,CAAClB,IACrC,CAAC,CAAC,CACFN,OAAO,CAAC,EAAE,CAAC,CACXJ,UAAU,CAAC,KAAK,CAAC,CACpB,CAAC,CAAC,CACD8B,KAAK,CAAC,SAAAC,GAAG,QAAI,CAAAC,KAAK,CAAC,sCAAsC,CAAC,GAAC,CACrE,CAAC,CACD,mBACIxC,IAAA,QAAKyC,SAAS,CAAC,SAAS,CAAAC,QAAA,cACpBxC,KAAA,QAAKuC,SAAS,CAAC,WAAW,CAAAC,QAAA,eACtB1C,IAAA,CAACL,KAAK,GAAE,CAAC,cACTK,IAAA,CAACJ,IAAI,EAAC0B,UAAU,CAAEA,UAAW,CAACV,OAAO,CAAEA,OAAQ,CAACD,IAAI,CAAEA,IAAK,CAAE,CAAC,CAC7DJ,OAAO,cAAGP,IAAA,CAACF,OAAO,GAAE,CAAC,cAAGE,IAAA,CAACH,OAAO,EAACuB,OAAO,CAAEA,OAAQ,CAAE,CAAC,EACrD,CAAC,CACL,CAAC,CAEd,CAAC,CACD,cAAe,CAAAjB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}